[{"C:\\Users\\wmarc\\OneDrive\\Pulpit\\ReactProject\\01-starting-project\\src\\index.js":"1","C:\\Users\\wmarc\\OneDrive\\Pulpit\\ReactProject\\01-starting-project\\src\\App.js":"2","C:\\Users\\wmarc\\OneDrive\\Pulpit\\ReactProject\\01-starting-project\\src\\components\\SimpleInput.js":"3","C:\\Users\\wmarc\\OneDrive\\Pulpit\\ReactProject\\01-starting-project\\src\\hooks\\use-input.js":"4","C:\\Users\\wmarc\\OneDrive\\Pulpit\\ReactProject\\01-starting-project\\src\\components\\BasicForm.js":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":213,"mtime":1628329366396,"results":"8","hashOfConfig":"7"},{"size":2669,"mtime":1628333014736,"results":"9","hashOfConfig":"7"},{"size":723,"mtime":1628328640649,"results":"10","hashOfConfig":"7"},{"size":3912,"mtime":1628336361013,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"18ykzqc",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\wmarc\\OneDrive\\Pulpit\\ReactProject\\01-starting-project\\src\\index.js",[],["25","26"],"C:\\Users\\wmarc\\OneDrive\\Pulpit\\ReactProject\\01-starting-project\\src\\App.js",["27"],"import SimpleInput from './components/SimpleInput';\nimport BasicForm from './components/BasicForm'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\wmarc\\OneDrive\\Pulpit\\ReactProject\\01-starting-project\\src\\components\\SimpleInput.js",["28"],"import { useState } from \"react\";\n\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameisTouched, setEnteredNameisTouched] = useState(false);\n  const [enteredEmailisTouched, setEnteredEmailisTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const enteredEmailIsValid = enteredEmail.includes(\"@\")\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameisTouched;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailisTouched;\n\n  \n \n  let formIsValid = false\n  \n  if(enteredNameIsValid){\n    formIsValid=true}\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameisTouched(true);\n  };\n\n  const emailInputBlurHandler = () => {\n    setEnteredEmailisTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameisTouched(true);\n    setEnteredEmailisTouched(true);\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName,enteredEmail);\n\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameisTouched(false);\n    setEnteredEmailisTouched(false);\n  };\n\n  const nameinputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n    const emailInputClasses = emailInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";  \n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameinputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onBlur={nameInputBlurHandler}\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your e-mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onBlur={emailInputBlurHandler}\n          onChange={emailInputChangeHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && (\n          <p className=\"error-text\">Email must includes \"@\"</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","C:\\Users\\wmarc\\OneDrive\\Pulpit\\ReactProject\\01-starting-project\\src\\hooks\\use-input.js",[],"C:\\Users\\wmarc\\OneDrive\\Pulpit\\ReactProject\\01-starting-project\\src\\components\\BasicForm.js",["29","30","31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":19},{"ruleId":"36","severity":1,"message":"40","line":3,"column":8,"nodeType":"38","messageId":"39","endLine":3,"endColumn":16},{"ruleId":"36","severity":1,"message":"41","line":6,"column":23,"nodeType":"38","messageId":"39","endLine":6,"endColumn":37},{"ruleId":"36","severity":1,"message":"42","line":9,"column":24,"nodeType":"38","messageId":"39","endLine":9,"endColumn":39},{"ruleId":"36","severity":1,"message":"43","line":12,"column":23,"nodeType":"38","messageId":"39","endLine":12,"endColumn":37},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useInput' is defined but never used.","'setNameIsValid' is assigned a value but never used.","'setEmailIsValid' is assigned a value but never used.","'setLastIsValid' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]